[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 utDataStoR authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/full_time_equivalent.html","id":"how-to-produce-sql-code","dir":"Articles","previous_headings":"","what":"How to produce SQL code","title":"FTE Enrollment","text":"{utDataStor} three queries FTE. three queries pull data, differ pull : Edify, REPT, DSCIR. following function produce file my_new_name.sql file called sql. produce following file.","code":"sql_fte('edify', 'my_new_name.sql') WITH FTEUG AS (   SELECT ROUND(SUM(registered_credits)/15) AS FTE,           term_id,           term_desc AS Term      FROM export.student_term_level     WHERE is_enrolled       AND term_id BETWEEN '201440' AND '202240'       AND level_id = 'UG'       AND is_primary_level  GROUP BY term_id, term_desc  ),   FTEG AS (SELECT ROUND(SUM(registered_credits)/10) AS FTE,          term_id,          term_desc AS Term     FROM export.student_term_level    WHERE is_enrolled      AND term_id BETWEEN '201440' AND '202240'      AND level_id = 'GR'      AND is_primary_level GROUP BY term_id, term_desc)    SELECT FTEUG.term,          SUM(FTEUG.fte + COALESCE(FTEG.fte, 0)) AS FTE      FROM fteug LEFT JOIN fteg        ON FTEUG.term_id = FTEG.term_id     WHERE FTEUG.term_id BETWEEN '201440' AND '202240' GROUP BY FTEUG.term;"},{"path":"/articles/retention.html","id":"cohort-retention","dir":"Articles","previous_headings":"","what":"Cohort retention","title":"Retention","text":"Degree seeking students assigned cohort enter University. eight cohorts students placed Full-time, Bachelors degree seeking, freshman Full-time, Bachelors degree seeking, transfer Part-time, Bachelors degree seeking, freshman Part-time, Bachelors degree seeking, transfer Full-time, Associates degree seeking, freshman Full-time, Associates degree seeking, transfer Part-time, Associates degree seeking, freshman Part-time, Associates degree seeking, transfer Cohort retention metrics track cohorts progress toward graduation. UT eight cohort retention metrics. denominator metric number student within cohort. numerator metric number students cohort enrolled census term indicated. Fall--spring cohort retention rate Fall--fall2 cohort retention rate Fall--fall3 cohort retention rate Fall--fall4 cohort retention rate","code":""},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Matt Nickodemus. Author, maintainer. Joy Baule. Author. Justin Pfeifer. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Nickodemus M, Baule J, Pfeifer J (2023). utDataStoR: SQL data sets Office Institutional Effectiveness. R package version 0.0.0.9000, https://github.com/dsu-effectiveness/utDataStoR.","code":"@Manual{,   title = {utDataStoR: SQL and data sets for the Office of Institutional Effectiveness},   author = {Matt Nickodemus and Joy Baule and Justin Pfeifer},   year = {2023},   note = {R package version 0.0.0.9000},   url = {https://github.com/dsu-effectiveness/utDataStoR}, }"},{"path":"/index.html","id":"utdatastor-","dir":"","previous_headings":"","what":"SQL and data sets for the Office of Institutional Effectiveness","title":"SQL and data sets for the Office of Institutional Effectiveness","text":"goal utDataStoR centralize document standard SQL queries data sets used Office Institutional Effectiveness Utah Tech University.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"SQL and data sets for the Office of Institutional Effectiveness","text":"can install development version utDataStoR GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"dsu-effectiveness/utDataStoR\")"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"SQL and data sets for the Office of Institutional Effectiveness","text":"basic example shows solve common problem:","code":"library(utDataStoR) ## basic example code"},{"path":"/reference/make_retention_sql.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Retention Sql — make_retention_sql","title":"Generate Retention Sql — make_retention_sql","text":"make_retention_sql generate standard sql query pulling retention data Edify","code":""},{"path":"/reference/make_retention_sql.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Retention Sql — make_retention_sql","text":"","code":"make_retention_sql(name, type = \"term_to_term\")"},{"path":"/reference/make_retention_sql.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Retention Sql — make_retention_sql","text":"name name want SQL file sql folder. type type retention file want. Defaults 'term_to_term'. type parameter term_to_term cohort","code":""},{"path":"/reference/make_retention_sql.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Retention Sql — make_retention_sql","text":"sql file SQL folder","code":""},{"path":"/reference/sql_fte.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate FTE SQL — sql_fte","title":"Generate FTE SQL — sql_fte","text":"sql_fte generate standard sql query pulling FTE Edify, REPT DSCIR.","code":""},{"path":"/reference/sql_fte.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate FTE SQL — sql_fte","text":"","code":"sql_fte(data_source, name)"},{"path":"/reference/sql_fte.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate FTE SQL — sql_fte","text":"data_source server full . Edify, REPT, DSCIR name name want SQL file sql folder.","code":""},{"path":"/reference/sql_fte.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate FTE SQL — sql_fte","text":"sql file SQL folder","code":""}]
